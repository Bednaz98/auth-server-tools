# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  GIT_TOKEN: ${{secrets.GIT_TOKEN}}
  NPM_TOKEN: ${{secrets.NPM_TOKEN}}
on:
  push:
    branches: ["main"]
  pull_request:
    branches: "*"
jobs:
  quality:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ["19"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: git config --global url."https://${{ secrets.GIT_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
  publish-npm:
    needs: quality
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: git config --global url."https://${{ secrets.GIT_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  ## docker publication normal
  publish-docker-normal:
    needs: [quality]
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      GIT_TOKEN: ${{secrets.GIT_TOKEN}}
      NPM_TOKEN: ${{secrets.NPM_TOKEN}}
    permissions:
      contents: read
      packages: write
    if: ${{github.ref == 'refs/heads/main'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
      - run: |
          touch .npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
          echo "cat .npmrc"
          cat .npmrc
      - run: ls -a -R .
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
